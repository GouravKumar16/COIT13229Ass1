import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class ServerGUI extends JPanel {
    private static final long serialVersionUID = 1L;
    private BufferedImage mapImage;
    private List<Drone> drones;
    private List<Fire> fires;

    public ServerGUI() {
        try {
            mapImage = ImageIO.read(new File("map.png"));
            drones = loadDronesFromBinaryFile("drones.bin");
            fires = loadFiresFromCSVFile("fires.csv");
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    private List<Drone> loadDronesFromBinaryFile(String filename) throws IOException, ClassNotFoundException {
        List<Drone> drones = new ArrayList<>();
        FileInputStream fis = new FileInputStream(filename);
        ObjectInputStream ois = new ObjectInputStream(fis);
        while (fis.available() > 0) {
            Drone drone = (Drone) ois.readObject();
            drones.add(drone);
        }
        ois.close();
        fis.close();
        return drones;
    }

    private List<Fire> loadFiresFromCSVFile(String filename) throws IOException {
        List<Fire> fires = new ArrayList<>();
        BufferedReader br = new BufferedReader(new FileReader(filename));
        String line;
        while ((line = br.readLine()) != null) {
            String[] tokens = line.split(",");
            Fire fire = new Fire(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]));
            fires.add(fire);
        }
        br.close();
        return fires;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(mapImage, 0, 0, null);
        for (Drone drone : drones) {
            g.setColor(Color.BLUE);
            g.fillOval(drone.getX(), drone.getY(), 10, 10);
        }
        for (Fire fire : fires) {
            g.setColor(Color.RED);
            g.fillOval(fire.getX(), fire.getY(), 5, 5);
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Server GUI");
        ServerGUI panel = new ServerGUI();
        frame.getContentPane().add(panel);
        frame.setSize(panel.mapImage.getWidth(), panel.mapImage.getHeight());
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}
